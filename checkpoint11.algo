FUNCTION right_position ( elt:INTEGER) : INTEGER
VAR
    pivot_indice,j,k,position :INTEGER;
    found, founded : BOOLEAN ;
BEGIN
     ///////////////////////////////////////////////////////code search the right position
 pivot_indice:= (0 + sorted_size)/2 ;
     IF (tabsorted[pivot_indice]>elt) THEN
// search descendent
 j:=pivot_indice;
 found:= false;
WHILE (found=false) DO
/* si pivot_indice=0 
position 0 
else
wa5ar wa5ar hata talka position
*/

 IF (j=0) THEN
    position:=0 ; found:=true ;
 ELSE
j:=j-1;
IF (tabsorted[j]>elt) THEN
    found:=false;
ELSE
    position:=j+1;
    found:=true;
END_IF
 END_IF
END_WHILE

     ELSE

// search montant
 k:=pivot_indice;
 founded:= false;
WHILE (founded=false) DO
/* si pivot_indice=taille-1 
position =taille-1
else
9adim 9adim hata talka position
*/

 IF (k=sorted_size-1) THEN
    position:=sorted_size-1 ; founded:=true ;
 ELSE
k:=k+1;
IF (tabsorted[k]<elt) THEN
    founded:=false;
ELSE
    position:=k-1;
    founded:=true;
END_IF
 END_IF
END_WHILE
       END_IF
RETURN position;
END 

PROCEDURE insertion (VAR tab:ARRAY_OF INTEGER, position:INTEGER)
VAR
    i:INTEGER;
BEGIN
//decart
    FOR i FROM sorted_size-1 TO position STEP -1  DO
        tab[i+1]:=tab[i];
    END_FOR
//inseri and sorted_size++
 tab[position]:= tabunsorted[i];
 sorted_size:= sorted_size + 1 ;
END

////////////////////////////////////////// MAIN PROGRAM //////////////////////////////////////////////////////

ALGORITHM insertion_sorting
VAR

  tabsorted, tabunsorted : ARRAY_OF INTEGER[10];
  pos, sorted_size,i : INTEGER ;

BEGIN
// enter tab values aleatoire
    FOR i FROM 0 TO 9 STEP 1  DO
        read(tabunsorted[i]);
    END_FOR

// bech nhotou tawa bil element bil element fil tableau sorted ki wra9 elrami
 tabsorted[0]:= tabunsorted[0];
 sorted_size:=1 ;
FOR i FROM 1 TO 9 STEP 1  DO

  pos:= right_position (tabunsorted[i]);
  insertion (tabsorted,pos) ;

END_FOR
END